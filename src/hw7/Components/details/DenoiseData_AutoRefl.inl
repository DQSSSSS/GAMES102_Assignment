// This file is generated by Ubpa::USRefl::AutoRefl

#pragma once

#include <USRefl/USRefl.h>

template<>
struct Ubpa::USRefl::TypeInfo<DenoiseData> :
    TypeInfoBase<DenoiseData>
{
#ifdef UBPA_USREFL_NOT_USE_NAMEOF
    static constexpr char name[12] = "DenoiseData";
#endif
    static constexpr AttrList attrs = {};
    static constexpr FieldList fields = {
        Field {TSTR("randomScale"), &Type::randomScale, AttrList {
            Attr {TSTR(UMeta::initializer), []()->float{ return 1.f; }},
            Attr {TSTR(UInspector::min_value), 0.f},
            Attr {TSTR(UInspector::tooltip), "random scale"},
        }},
        Field {TSTR("recurStep"), &Type::recurStep, AttrList {
            Attr {TSTR(UMeta::initializer), []()->float{ return 0.01f; }},
            Attr {TSTR(UInspector::min_value), 0.f},
            Attr {TSTR(UInspector::tooltip), "step"},
        }},
        Field {TSTR("num_iterations"), &Type::num_iterations, AttrList {
            Attr {TSTR(UMeta::initializer), []()->int{ return { 10 }; }},
            Attr {TSTR(UInspector::min_value), 0},
            Attr {TSTR(UInspector::step), 1},
            Attr {TSTR(UInspector::tooltip), "number of iterations"},
        }},
        Field {TSTR("param_radius"), &Type::param_radius, AttrList {
            Attr {TSTR(UMeta::initializer), []()->float{ return 2; }},
            Attr {TSTR(UInspector::min_value), 0},
            Attr {TSTR(UInspector::tooltip), "Param radius"},
        }},
        Field {TSTR("mesh"), &Type::mesh},
        Field {TSTR("heMesh"), &Type::heMesh, AttrList {
            Attr {TSTR(UMeta::initializer), []()->std::shared_ptr<HEMeshX>{ return { std::make_shared<HEMeshX>() }; }},
            Attr {TSTR(UInspector::hide)},
        }},
        Field {TSTR("copy"), &Type::copy, AttrList {
            Attr {TSTR(UInspector::hide)},
        }},
        Field {TSTR("color_type"), &Type::color_type, AttrList {
            Attr {TSTR(UMeta::initializer), []()->int{ return 0; }},
            Attr {TSTR(UInspector::hide)},
        }},
        Field {TSTR("color_type_last"), &Type::color_type_last, AttrList {
            Attr {TSTR(UMeta::initializer), []()->int{ return 0; }},
            Attr {TSTR(UInspector::hide)},
        }},
        Field {TSTR("param_method"), &Type::param_method, AttrList {
            Attr {TSTR(UMeta::initializer), []()->int{ return 0; }},
            Attr {TSTR(UInspector::hide)},
        }},
        Field {TSTR("param_shape"), &Type::param_shape, AttrList {
            Attr {TSTR(UMeta::initializer), []()->int{ return 0; }},
            Attr {TSTR(UInspector::hide)},
        }},
        Field {TSTR("global_type"), &Type::global_type, AttrList {
            Attr {TSTR(UInspector::hide)},
        }},
    };
};

